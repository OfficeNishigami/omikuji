try{self["workbox:core:6.4.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:6.4.1"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class i{constructor(e,t,i="GET"){this.handler=s(t),this.match=e,this.method=i}setCatchHandler(e){this.catchHandler=s(e)}}class n extends i{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class a{constructor(){this.t=new Map,this.i=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const i=s.origin===location.origin,{params:n,route:a}=this.findMatchingRoute({event:t,request:e,sameOrigin:i,url:s});let r=a&&a.handler;const c=e.method;if(!r&&this.i.has(c)&&(r=this.i.get(c)),!r)return;let o;try{o=r.handle({url:s,request:e,event:t,params:n})}catch(e){o=Promise.reject(e)}const f=a&&a.catchHandler;return o instanceof Promise&&(this.o||f)&&(o=o.catch((async i=>{if(f)try{return await f.handle({url:s,request:e,event:t,params:n})}catch(e){e instanceof Error&&(i=e)}if(this.o)return this.o.handle({url:s,request:e,event:t});throw i}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:i}){const n=this.t.get(s.method)||[];for(const a of n){let n;const r=a.match({url:e,sameOrigin:t,request:s,event:i});if(r)return n=r,(Array.isArray(n)&&0===n.length||r.constructor===Object&&0===Object.keys(r).length||"boolean"==typeof r)&&(n=void 0),{route:a,params:n}}return{}}setDefaultHandler(e,t="GET"){this.i.set(t,s(e))}setCatchHandler(e){this.o=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const c={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},o=e=>[c.prefix,e,c.suffix].filter((e=>e&&e.length>0)).join("-"),f=e=>e||o(c.precache),l=e=>e||o(c.runtime);function h(e,t){const s=t();return e.waitUntil(s),s}try{self["workbox:precaching:6.4.1"]&&_()}catch(e){}function u(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:i}=e;if(!i)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(i,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(i,location.href),a=new URL(i,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:a.href}}class d{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class p{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this.l.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this.l=e}}let b;async function w(e,s){let i=null;if(e.url){i=new URL(e.url).origin}if(i!==self.location.origin)throw new t("cross-origin-copy-response",{origin:i});const n=e.clone(),a={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=s?s(a):a,c=function(){if(void 0===b){const e=new Response("");if("body"in e)try{new Response(e.body),b=!0}catch(e){b=!1}b=!1}return b}()?n.body:await n.blob();return new Response(c,r)}function g(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class v{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const y=new Set;try{self["workbox:strategies:6.4.1"]&&_()}catch(e){}function m(e){return"string"==typeof e?new Request(e):e}class R{constructor(e,t){this.h={},Object.assign(this,t),this.event=t.event,this.u=e,this.p=new v,this.g=[],this.v=[...e.plugins],this.m=new Map;for(const e of this.v)this.m.set(e,{});this.event.waitUntil(this.p.promise)}async fetch(e){const{event:s}=this;let i=m(e);if("navigate"===i.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?i.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))i=await e({request:i.clone(),event:s})}catch(e){if(e instanceof Error)throw new t("plugin-error-request-will-fetch",{thrownErrorMessage:e.message})}const a=i.clone();try{let e;e=await fetch(i,"navigate"===i.mode?void 0:this.u.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:a,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:a.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=m(e);let s;const{cacheName:i,matchOptions:n}=this.u,a=await this.getCacheKey(t,"read"),r=Object.assign(Object.assign({},n),{cacheName:i});s=await caches.match(a,r);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:i,matchOptions:n,cachedResponse:s,request:a,event:this.event})||void 0;return s}async cachePut(e,s){const i=m(e);var n;await(n=0,new Promise((e=>setTimeout(e,n))));const a=await this.getCacheKey(i,"write");if(!s)throw new t("cache-put-with-no-response",{url:(r=a.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const c=await this.R(s);if(!c)return!1;const{cacheName:o,matchOptions:f}=this.u,l=await self.caches.open(o),h=this.hasCallback("cacheDidUpdate"),u=h?await async function(e,t,s,i){const n=g(t.url,s);if(t.url===n)return e.match(t,i);const a=Object.assign(Object.assign({},i),{ignoreSearch:!0}),r=await e.keys(t,a);for(const t of r)if(n===g(t.url,s))return e.match(t,i)}(l,a.clone(),["__WB_REVISION__"],f):null;try{await l.put(a,h?c.clone():c)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of y)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:o,oldResponse:u,newResponse:c.clone(),request:a,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this.h[s]){let i=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))i=m(await e({mode:t,request:i,event:this.event,params:this.params}));this.h[s]=i}return this.h[s]}hasCallback(e){for(const t of this.u.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this.u.plugins)if("function"==typeof t[e]){const s=this.m.get(t),i=i=>{const n=Object.assign(Object.assign({},i),{state:s});return t[e](n)};yield i}}waitUntil(e){return this.g.push(e),e}async doneWaiting(){let e;for(;e=this.g.shift();)await e}destroy(){this.p.resolve(null)}async R(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class q extends class{constructor(e={}){this.cacheName=l(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,i="params"in e?e.params:void 0,n=new R(this,{event:t,request:s,params:i}),a=this.q(n,s,t);return[a,this.U(a,n,s,t)]}async q(e,s,i){let n;await e.runCallbacks("handlerWillStart",{event:i,request:s});try{if(n=await this.L(s,e),!n||"error"===n.type)throw new t("no-response",{url:s.url})}catch(t){if(t instanceof Error)for(const a of e.iterateCallbacks("handlerDidError"))if(n=await a({error:t,event:i,request:s}),n)break;if(!n)throw t}for(const t of e.iterateCallbacks("handlerWillRespond"))n=await t({event:i,request:s,response:n});return n}async U(e,t,s,i){let n,a;try{n=await e}catch(a){}try{await t.runCallbacks("handlerDidRespond",{event:i,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(a=e)}if(await t.runCallbacks("handlerDidComplete",{event:i,request:s,response:n,error:a}),t.destroy(),a)throw a}}{constructor(e={}){e.cacheName=f(e.cacheName),super(e),this._=!1!==e.fallbackToNetwork,this.plugins.push(q.copyRedirectedCacheableResponsesPlugin)}async L(e,t){const s=await t.cacheMatch(e);return s||(t.event&&"install"===t.event.type?await this.C(e,t):await this.k(e,t))}async k(e,s){let i;const n=s.params||{};if(!this._)throw new t("missing-precache-entry",{cacheName:this.cacheName,url:e.url});{const t=n.integrity,a=e.integrity,r=!a||a===t;i=await s.fetch(new Request(e,{integrity:a||t})),t&&r&&(this.O(),await s.cachePut(e,i.clone()))}return i}async C(e,s){this.O();const i=await s.fetch(e);if(!await s.cachePut(e,i.clone()))throw new t("bad-precaching-response",{url:e.url,status:i.status});return i}O(){let e=null,t=0;for(const[s,i]of this.plugins.entries())i!==q.copyRedirectedCacheableResponsesPlugin&&(i===q.defaultPrecacheCacheabilityPlugin&&(e=s),i.cacheWillUpdate&&t++);0===t?this.plugins.push(q.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}q.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},q.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:e})=>e.redirected?await w(e):e};class U{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this.N=new Map,this.j=new Map,this.M=new Map,this.u=new q({cacheName:f(e),plugins:[...t,new p({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this.u}precache(e){this.addToCacheList(e),this.D||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this.D=!0)}addToCacheList(e){const s=[];for(const i of e){"string"==typeof i?s.push(i):i&&void 0===i.revision&&s.push(i.url);const{cacheKey:e,url:n}=u(i),a="string"!=typeof i&&i.revision?"reload":"default";if(this.N.has(n)&&this.N.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.N.get(n),secondEntry:e});if("string"!=typeof i&&i.integrity){if(this.M.has(e)&&this.M.get(e)!==i.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:n});this.M.set(e,i.integrity)}if(this.N.set(n,e),this.j.set(n,a),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return h(e,(async()=>{const t=new d;this.strategy.plugins.push(t);for(const[t,s]of this.N){const i=this.M.get(s),n=this.j.get(t),a=new Request(t,{integrity:i,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:a,event:e}))}const{updatedURLs:s,notUpdatedURLs:i}=t;return{updatedURLs:s,notUpdatedURLs:i}}))}activate(e){return h(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this.N.values()),i=[];for(const n of t)s.has(n.url)||(await e.delete(n),i.push(n.url));return{deletedURLs:i}}))}getURLsToCacheKeys(){return this.N}getCachedURLs(){return[...this.N.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.N.get(t.href)}getIntegrityForCacheKey(e){return this.M.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.strategy.cacheName)).match(s)}}createHandlerBoundToURL(e){const s=this.getCacheKeyForURL(e);if(!s)throw new t("non-precached-url",{url:e});return t=>(t.request=new Request(e),t.params=Object.assign({cacheKey:s},t.params),this.strategy.handle(t))}}let L;const E=()=>(L||(L=new U),L);class C extends i{constructor(e,t){super((({request:s})=>{const i=e.getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:i=!0,urlManipulation:n}={}){const a=new URL(e,location.href);a.hash="",yield a.href;const r=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(a,t);if(yield r.href,s&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=s,yield e.href}if(i){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:a});for(const t of e)yield t.href}}(s.url,t)){const t=i.get(n);if(t){return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}}),e.strategy)}}function k(e){const s=E();!function(e,s,c){let o;if("string"==typeof e){const t=new URL(e,location.href);o=new i((({url:e})=>e.href===t.href),s,c)}else if(e instanceof RegExp)o=new n(e,s,c);else if("function"==typeof e)o=new i(e,s,c);else{if(!(e instanceof i))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});o=e}(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r).registerRoute(o)}(new C(s,e))}var x;self.skipWaiting(),self.addEventListener("activate",(()=>self.clients.claim())),x={},function(e){E().precache(e)}([{url:"app.css",revision:"e1b3d2f8697f3bc687d7172c009b0492"},{url:"app.js",revision:"0fc9a63064fc8b07fb042dc062591ca4"},{url:"app.js.LICENSE.txt",revision:"95b743623384aed4c3165ef7e98df47b"},{url:"browserconfig.xml",revision:"5c3214f3ca24495685fc6f5ddd4d2884"},{url:"favicon.ico",revision:"66170424a72d74aac664e1f51a962558"},{url:"icons/apple-icon-120.png",revision:"1a0cb732fb498d6bb03b00dcf581e966"},{url:"icons/apple-icon-152.png",revision:"303b3b3803b40e9a056d4b767523fbfa"},{url:"icons/apple-icon-167.png",revision:"01a4a1f56840e7153c62676aea9c2651"},{url:"icons/apple-icon-180.png",revision:"f83e01ed794d521873e07bd7e4068a91"},{url:"icons/apple-splash-1125-2436.png",revision:"cc72b12e582f612e6136f26993f7b58d"},{url:"icons/apple-splash-1170-2532.png",revision:"2c461672fb7f4222ad6f212ad5e1ce17"},{url:"icons/apple-splash-1242-2208.png",revision:"6dbb6f807789e2f9aa338fb831663e5b"},{url:"icons/apple-splash-1242-2688.png",revision:"944839a4086ba8809d21037d0a0b121f"},{url:"icons/apple-splash-1284-2778.png",revision:"de434250bf5ca43a2490f24f66b4f674"},{url:"icons/apple-splash-1536-2048.png",revision:"f3e71eb33e4a28c79a3b089e2db6ddbb"},{url:"icons/apple-splash-1620-2160.png",revision:"f630554f97d1d16904a66a0ab2b9df7a"},{url:"icons/apple-splash-1668-2224.png",revision:"d316455a650691ba85568d1226c54347"},{url:"icons/apple-splash-1668-2388.png",revision:"d2b74c70969a4d6eda503b726647caf3"},{url:"icons/apple-splash-2048-2732.png",revision:"6bdf51fbf74b25f7662ad4caec842e17"},{url:"icons/apple-splash-640-1136.png",revision:"0a01bb35fc5a8fa5b5f0c3359242784b"},{url:"icons/apple-splash-750-1334.png",revision:"14862573622519977f0596ab81dfe4fd"},{url:"icons/apple-splash-828-1792.png",revision:"0d82bf75da285361daa5d23c527cc4b8"},{url:"icons/manifest-icon-144.png",revision:"b9ae7d4b5aa68ba85db80dd8da387669"},{url:"icons/manifest-icon-192.png",revision:"e2d8644ee6495f5437686ed6d02592ae"},{url:"icons/manifest-icon-512.png",revision:"7b6006c5d9546bc6d3caf324a7f72287"},{url:"images/Material-Design-Iconic-Font.ttf",revision:"b351bd62abcd96e924d9f44a3da169a7"},{url:"images/Material-Design-Iconic-Font.woff",revision:"d2a55d331bdd1a7ea97a8a1fbb3c569c"},{url:"images/Material-Design-Iconic-Font.woff2",revision:"a4d31128b633bc0b1cc1f18a34fb3851"},{url:"images/chuukichi.png",revision:"ae5c346838fdfc1461cdd50412324cb7"},{url:"images/cover.png",revision:"f2df61f499edb5cbb1807ddfa427784b"},{url:"images/daikichi.png",revision:"b7f05f0ad67e1dc770b1c86915e6c9eb"},{url:"images/daikyou.png",revision:"89dcf418b91104cf1bc13abb604ea480"},{url:"images/fa-brands-400.eot",revision:"a7b95dbdd87e0c809570affaf366a434"},{url:"images/fa-brands-400.svg",revision:"5bf145531213545e03ff41cd27df7d2b"},{url:"images/fa-brands-400.ttf",revision:"98b6db59be947f563350d2284fc9ea36"},{url:"images/fa-brands-400.woff",revision:"2ef8ba3410dcc71578a880e7064acd7a"},{url:"images/fa-brands-400.woff2",revision:"5e2f92123d241cabecf0b289b9b08d4a"},{url:"images/fa-regular-400.eot",revision:"dcce4b7fbd5e895561e18af4668265af"},{url:"images/fa-regular-400.svg",revision:"5eb754ab7dbd2fee562360528db4c3c0"},{url:"images/fa-regular-400.ttf",revision:"65b9977aa23185e8964b36eddbce7a20"},{url:"images/fa-regular-400.woff",revision:"427d721b86fc9c68b2e85ad42b69238c"},{url:"images/fa-regular-400.woff2",revision:"e6257a726a0cf6ec8c6fec22821c055f"},{url:"images/fa-solid-900.eot",revision:"46e7cec623d8bd790d9fdbc8de2d3ee7"},{url:"images/fa-solid-900.svg",revision:"49279363201ed19a840796e05a74a91b"},{url:"images/fa-solid-900.ttf",revision:"ff8d9f8adb0d09f11d4816a152672f53"},{url:"images/fa-solid-900.woff",revision:"a7140145ebaaf5fb14e40430af5d25c4"},{url:"images/fa-solid-900.woff2",revision:"418dad87601f9c8abd0e5798c0dc1feb"},{url:"images/ionicons.eot",revision:"7f9fdd5e7c0656fea97141765f3e0b50"},{url:"images/ionicons.svg",revision:"665921072642ed354618b32af7425a22"},{url:"images/ionicons.ttf",revision:"cfdc15225683b7529d6ba1e9d8a9be59"},{url:"images/ionicons.woff",revision:"c37ad37a3a23417b739ac3b297416201"},{url:"images/ionicons.woff2",revision:"96f1c901c087fb64019f7665f7f8aca6"},{url:"images/kichi.png",revision:"5c60f5b5f2db8e350ed816ddbe47bcf5"},{url:"images/kyou.png",revision:"52d95556a9e6a48fa26b5a1574cda461"},{url:"images/omikuji.png",revision:"da1437d6d5e60cd9628bfc9c51495f97"},{url:"images/suekichi.png",revision:"72a332f05fe254ca981ec748d4874fd4"},{url:"images/syoukichi.png",revision:"70565be90791f7dbb404a39a8e681fc5"},{url:"index.html",revision:"53f7ba83226d7d95a89d2b786bffd1a1"},{url:"manifest.json",revision:"ad588ddb3142018329fc65469b4338c7"}]),k(x);
